{"ast":null,"code":"var _jsxFileName = \"/Users/imin-ug/Documents/GitHub/dstore_admin/src/components/Banner/Banner.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport \"./Banner.css\";\nimport lol from \"../../assets/Img/img.png\";\nimport BannerApi from '../../assets/Api/Banner/BannerApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Banner = () => {\n  _s();\n\n  const [isDragging, setIsDragging] = useState(false);\n  const [files, setFiles] = useState({});\n  const fileId = useRef(0);\n  const dragRef = useRef(null);\n  const onChangeFiles = useCallback(e => {\n    let selectFiles = [];\n    let tempFiles = files; // temp 변수를 이용하여 선택했던 파일들을 담습니다.\n    // 드래그 했을 때와 안했을 때 가리키는 파일 배열을 다르게 해줍니다.\n\n    if (e.type === \"drop\") {\n      // 드래그 앤 드롭 했을때\n      selectFiles = e.dataTransfer.files;\n    } else {\n      // \"파일 첨부\" 버튼을 눌러서 이미지를 선택했을때\n      selectFiles = e.target.files;\n    }\n\n    for (const file of selectFiles) {\n      // 스프레드 연산자를 이용하여 기존에 있던 파일들을 복사하고, 선택했던 파일들을 append 해줍니다.\n      tempFiles = [...tempFiles, {\n        id: fileId.current++,\n        // fileId의 값을 1씩 늘려주면서 각 파일의 고유값으로 사용합니다.\n        object: file // object 객체안에 선택했던 파일들의 정보가 담겨있습니다.\n\n      }];\n    }\n\n    setFiles(tempFiles);\n  }, [files]);\n  const handleDragIn = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  const handleDragOut = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  }, []);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(e); // if (e.dataTransfer!.files) {\n    //   setIsDragging(true);\n    // }\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    onChangeFiles(e);\n    setIsDragging(false);\n  }, [onChangeFiles]);\n  const initDragEvents = useCallback(() => {\n    if (dragRef.current !== null) {\n      dragRef.current.addEventListener(\"dragenter\", handleDragIn);\n      dragRef.current.addEventListener(\"dragleave\", handleDragOut);\n      dragRef.current.addEventListener(\"dragover\", handleDragOver);\n      dragRef.current.addEventListener(\"drop\", handleDrop);\n    }\n  }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n  const resetDragEvents = useCallback(() => {\n    if (dragRef.current !== null) {\n      dragRef.current.removeEventListener(\"dragenter\", handleDragIn);\n      dragRef.current.removeEventListener(\"dragleave\", handleDragOut);\n      dragRef.current.removeEventListener(\"dragover\", handleDragOver);\n      dragRef.current.removeEventListener(\"drop\", handleDrop);\n    }\n  }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n  useEffect(async () => {\n    const response = await BannerApi.getBannerList();\n    initDragEvents();\n    return () => resetDragEvents();\n  }, [initDragEvents, resetDragEvents]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Banners\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Banner-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BannerAdd\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"fileUpload\",\n            style: {\n              display: \"none\"\n            },\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: isDragging ? \"DragDrop-File-Dragging\" : \"DragDrop-File\",\n            htmlFor: \"fileUpload\",\n            ref: dragRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\uD30C\\uC77C \\uCCA8\\uBD80\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Banner\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: lol,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Banner\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: lol,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Banner\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: lol,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Banner\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: lol,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Banner-nav\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uBC30\\uB108 \\uBC30\\uB108 \\uBC30\\uB108 \\uBC30\\uB108\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Banner, \"bMrAt16KYfx1shEw8qN4PZK/boc=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/Users/imin-ug/Documents/GitHub/dstore_admin/src/components/Banner/Banner.jsx"],"names":["React","useEffect","useState","useRef","useCallback","lol","BannerApi","Banner","isDragging","setIsDragging","files","setFiles","fileId","dragRef","onChangeFiles","e","selectFiles","tempFiles","type","dataTransfer","target","file","id","current","object","handleDragIn","preventDefault","stopPropagation","handleDragOut","handleDragOver","console","log","handleDrop","initDragEvents","addEventListener","resetDragEvents","removeEventListener","response","getBannerList","display"],"mappings":"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","sourcesContent":["import React,{useEffect, useState,useRef,useCallback} from 'react'\nimport \"./Banner.css\"\nimport lol from \"../../assets/Img/img.png\"\nimport BannerApi from '../../assets/Api/Banner/BannerApi'\n\nconst Banner = () => {\n\n    const [isDragging,setIsDragging] = useState(false);\n    const [files, setFiles] = useState({});\n    const fileId = useRef(0);\n\n    const dragRef = useRef(null);\n\n    const onChangeFiles = useCallback((e) => {\n        let selectFiles = [];\n        let tempFiles = files;\n        // temp 변수를 이용하여 선택했던 파일들을 담습니다.\n      \n        // 드래그 했을 때와 안했을 때 가리키는 파일 배열을 다르게 해줍니다.\n        if (e.type === \"drop\") {\n          // 드래그 앤 드롭 했을때\n          selectFiles = e.dataTransfer.files;\n        } else {\n          // \"파일 첨부\" 버튼을 눌러서 이미지를 선택했을때\n          selectFiles = e.target.files;\n        }\n      \n        for (const file of selectFiles) {\n          // 스프레드 연산자를 이용하여 기존에 있던 파일들을 복사하고, 선택했던 파일들을 append 해줍니다.\n          tempFiles = [\n            ...tempFiles,\n            {\n              id: fileId.current++, // fileId의 값을 1씩 늘려주면서 각 파일의 고유값으로 사용합니다.\n              object: file // object 객체안에 선택했던 파일들의 정보가 담겨있습니다.\n            }\n          ];\n        }\n      \n        setFiles(tempFiles);\n      }, [files]);\n\n    const handleDragIn = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }, []);\n    \n      const handleDragOut = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        setIsDragging(false);\n      }, []);\n    \n      const handleDragOver = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        console.log(e);\n        // if (e.dataTransfer!.files) {\n        //   setIsDragging(true);\n        // }\n      }, []);\n    \n      const handleDrop = useCallback(\n        (e)=> {\n          e.preventDefault();\n          e.stopPropagation();\n    \n          onChangeFiles(e);\n          setIsDragging(false);\n        },\n        [onChangeFiles]\n      );\n    \n      const initDragEvents = useCallback(() => {\n        \n        if (dragRef.current !== null) {\n          dragRef.current.addEventListener(\"dragenter\", handleDragIn);\n          dragRef.current.addEventListener(\"dragleave\", handleDragOut);\n          dragRef.current.addEventListener(\"dragover\", handleDragOver);\n          dragRef.current.addEventListener(\"drop\", handleDrop);\n        }\n      }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n    \n      const resetDragEvents = useCallback(()=> {\n        \n        if (dragRef.current !== null) {\n          dragRef.current.removeEventListener(\"dragenter\", handleDragIn);\n          dragRef.current.removeEventListener(\"dragleave\", handleDragOut);\n          dragRef.current.removeEventListener(\"dragover\", handleDragOver);\n          dragRef.current.removeEventListener(\"drop\", handleDrop);\n        }\n      }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n    \n\n    useEffect( async ()=>{\n        const response = await BannerApi.getBannerList();\n        initDragEvents();\n\n        return () => resetDragEvents();\n    },[initDragEvents, resetDragEvents])\n    return(\n        <>  \n            <div className=\"Banners\">\n                <div className=\"Banner-main\">\n                    <div className=\"BannerAdd\">\n                        <input type=\"file\" id=\"fileUpload\" style={{ display: \"none\" }} multiple={true}/>\n                        <label\n                            className={isDragging ? \"DragDrop-File-Dragging\" : \"DragDrop-File\"}\n                            htmlFor=\"fileUpload\"\n                            ref={dragRef}\n                         >\n                             <div>파일 첨부</div>\n                         </label>\n                    </div>\n                    <div className=\"Banner\">\n                        <img src={lol} alt=\"\"/>\n                    </div>\n                    <div className=\"Banner\">\n                        <img src={lol} alt=\"\"/>\n                    </div>\n                    <div className=\"Banner\">\n                        <img src={lol} alt=\"\"/>\n                    </div>\n                    <div className=\"Banner\">\n                        <img src={lol} alt=\"\"/>\n                    </div>\n                </div>\n                <div className=\"Banner-nav\">\n                    <div>\n                        배너 배너 배너 배너\n                    </div>\n                </div>\n            </div>\n\n            \n        </>\n    )\n}\n\nexport default Banner;"]},"metadata":{},"sourceType":"module"}